import sdk from '@stackblitz/sdk';

const tsconfig = {
  compilerOptions: {
    target: 'ES2020',
    lib: ['dom', 'dom.iterable', 'esnext'],
    allowJs: true,
    skipLibCheck: true,
    strict: true,
    forceConsistentCasingInFileNames: true,
    noEmit: true,
    esModuleInterop: true,
    module: 'esnext',
    moduleResolution: 'node',
    resolveJsonModule: true,
    isolatedModules: true,
    jsx: 'preserve',
    incremental: true,
    baseUrl: '.',
    paths: { '@/*': ['src/*'] },
  },
  include: ['next-env.d.ts', '**/*.ts', '**/*.tsx'],
  exclude: ['node_modules'],
};

const packageJson = {
  name: 'next-tailwind-demo',
  version: '0.0.1',
  private: true,
  scripts: {
    dev: 'next dev',
    build: 'next build',
    start: 'next start',
  },
  dependencies: {
    next: 'latest',
    react: 'latest',
    'react-dom': 'latest',
    tailwindcss: '^3.4.1',
    autoprefixer: '^10.4.17',
    postcss: '^8.4.35',
  },
  devDependencies: {
    typescript: '^5.2.2',
    '@types/react': 'latest',
    '@types/node': 'latest',
  },
};

const tailwindConfig = `
/** @type {import('tailwindcss').Config} */
import type { Config } from 'tailwindcss';

const config: Config = {
  content: [
    './pages/**/*.{js,ts,jsx,tsx,mdx}',
    './components/**/*.{js,ts,jsx,tsx,mdx}',
    './app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      backgroundImage: {
        'gradient-radial': 'radial-gradient(var(--tw-gradient-stops))',
        'gradient-conic':
          'conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops))',
      },
    },
  },
  plugins: [],
};
export default config;
`;

const postcssConfig = `
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
`;

const globalsCss = `
@tailwind base;
@tailwind components;
@tailwind utilities;
`;

const layout = `
import './globals.css';
import type { Metadata } from 'next';
import { Inter } from 'next/font/google';

const inter = Inter({ subsets: ['latin'] });

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body className={inter.className}>{children}</body>
    </html>
  );
}
`;

const nextEnv = `/// <reference types="next" />
/// <reference types="next/types/global" />
/// <reference types="next/image-types/global" />
`;

export async function openInStackblitzNextjs(opts: {
  code: string;
  css: string;
  id: string;
  otherFiles: Record<string, any>;
}) {
  let { code } = opts;
  const { otherFiles } = opts;

  // Replace export to make App consistent
  code = code.replace(/function App/, 'export default function App');

  const files = {
    'tsconfig.json': JSON.stringify(tsconfig, null, 2),
    'package.json': JSON.stringify(packageJson, null, 2),
    'tailwind.config.js': tailwindConfig,
    'postcss.config.js': postcssConfig,
    'next-env.d.ts': nextEnv,
    'app/globals.css': globalsCss,
    'app/page.tsx': code,
    'app/layout.tsx': layout,
    ...otherFiles,
  };

  sdk.openProject(
    {
      title: `TUI demo`,
      description: `demo file`,
      template: 'node', // still needed for Next.js
      files,
    },
    {
      openFile: 'app/page.tsx',
    },
  );
}
